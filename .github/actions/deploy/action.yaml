name: 'Build and push'
description: 'Build docker image and push to repo'
inputs:
  env:
    description: 'environment'
    required: true
  aws-access-key-id:
    description: 'aws access key id'
    required: true
  aws-secret-access-key:
    description: 'aws secret access key'
    required: true
  aws-region:
    description: 'aws region'
    required: true
    default: 'us-east-2'
  backend-bucket:
    description: 'terraform backend bucket name'
    required: true
    default: 'terraform-backend'
  backend-bucket-key:
    description: 'terraform backend bucket key'
    required: true
    default: 'customers-api-demo-ecs-state'
  image:
    description: 'container image to deploy'
    required: true
  AUTH_INTROSPECTION_URL:
    description: 'auth introspection url'
    required: true
  AUTH_CLIENT_ID:
    description: 'auth client id'
    required: true
  AUTH_CLIENT_SECRET:
    description: 'auth client secret'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2

    - name: Terraform fmt
      id: fmt
      shell: bash
      working-directory: devops/terraform/app-runner
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      shell: bash
      working-directory: devops/terraform/app-runner
      run: |
        terraform init \
          -backend-config="bucket=${{ inputs.backend-bucket }}" \
          -backend-config="key=${{ inputs.backend-bucket-key }}-${{ inputs.env }}" \
          -backend-config="region=${{ inputs.aws-region }}"

    - name: Terraform Validate
      id: validate
      shell: bash
      working-directory: devops/terraform/app-runner
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      shell: bash
      working-directory: devops/terraform/app-runner
      run: |
        terraform plan \
          -no-color \
          -var="service_name=customers-api-demo-${{ inputs.env }}" \
          -var="image=${{ inputs.image }}" \
          -var="AUTH_INTROSPECTION_URL=${{ inputs.AUTH_INTROSPECTION_URL }}" \
          -var="AUTH_CLIENT_ID=${{ inputs.AUTH_CLIENT_ID }}" \
          -var="AUTH_CLIENT_SECRET=${{ inputs.AUTH_CLIENT_SECRET }}"

    - name: Terraform Apply
      id: apply
      shell: bash
      working-directory: devops/terraform/app-runner
      run: |
        terraform apply \
          -auto-approve \
          -no-color \
          -var="service_name=customers-api-demo-${{ inputs.env }}" \
          -var="image=${{ inputs.image }}" \
          -var="AUTH_INTROSPECTION_URL=${{ inputs.AUTH_INTROSPECTION_URL }}" \
          -var="AUTH_CLIENT_ID=${{ inputs.AUTH_CLIENT_ID }}" \
          -var="AUTH_CLIENT_SECRET=${{ inputs.AUTH_CLIENT_SECRET }}"
